---
title: "BEE 4750/5750 Homework 2"
author: Andrew Scacchi (ads339)
date: `j import Dates; Dates.Date(Dates.now())`
weave_options:
    term: true
    results: tex
    cache: off
---

<!-- This setups the environment and installs packages, but doesn't appear in the generated document -->
<!-- You shouldn't need to modify this -->
```julia; echo = false; results = "hidden"
using Pkg
Pkg.activate(".")
Pkg.instantiate()
```

# Problem 1

## Problem 1.1
```julia
function downstream_concentration(x)
# Aeration and decay coefficients
ka = 0.55
kc = 0.35
kn = 0.25
# Velocity (km/day)
U = 6
# Sat DO (mg/L)
Cs = 10 
# DO from inflow, Source 1, and Source 2 (mg/L)
Co1 = 7.5
Co2 = 5
Co3 = 5
# Volumes (m^3/ d)
v1 = 100000
v2 = 10000
v3 = 15000
# CBOD initial (mg/L)
Bo1 = 5
Bo2 = 50
Bo3 = 45
# NBOD Initial (mg/L)
No1 = 5
No2 = 35
No3 = 35

## Compute Co, Bo, and No where source 1 and inflow mix
# Mixed Co
Co12 = ((v1*Co1) + (v2*Co2))/(v1+v2)
Bo12 = ((v1 * Bo1) + (v2 * Bo2))/(v1 + v2)
No12 = ((v1 * No1) + (v2 * No2))/(v1 + v2)


xDist = 0:1:x
for i in 1:length(xDist)
   xTrav = xDist[i]
   local a1 = exp(-ka * xTrav/U)
   local a2 = ((kc - ka)/kc)* ((exp(-kc * xTrav/U))-(exp(-ka * xTrav/U))) 
   local a3 = ((kn - ka)/kn)* ((exp(-kn * xTrav/U))-(exp(-ka * xTrav/U))) 
  Cl[i] = Cs*(1-a1)+(Co12*a1)-(Bo12*a2)-(No12*a3)
end
    return Cl[1:50]
end
a = downstream_concentration(50)

using Plots 
plot(a,0,50)

```

## Problem 1.2

## Problem 1.3

## Problem 1.4

## Problem 1.5

## Problem 1.6

## Problem 1.7

```julia; echo=false
# This block will not show up in compiled output.

using Distributions
using PDMats

# This function samples n correlated variates distributed over 
# Uniform([a[1], a[2]]) and Uniform([b[1], b[2]]) with correlation coefficient
# corr_coef.
#function sample_correlated_uniform(n, a, b, corr_coef=0.7)
 # mvnorm = MvNormal([0, 0], PDMat([1 corr_coef; corr_coef 1])) # set up a multivariate normal with each marginal variance of 1 and the right correlation
  #norm_samples = rand(mvnorm, n)' # sample from the multivariate normal, the marginal distributions are a standard normal
  #unif_samples = cdf.(Normal(0, 1), norm_samples) # convert samples to a uniform distribution using the pdf of a standard Normal
  #samples = (unif_samples .* [a[2] - a[1] b[2] - b[1]]) .+ [a[1] b[1]]
  #return samples
#end
```

## Problem 1.8

```

# References